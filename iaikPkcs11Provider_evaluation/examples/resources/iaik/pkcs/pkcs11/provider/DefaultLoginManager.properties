# the properties of the default login manager

# the implementation of the iaik.apps.util.passphrase.PassphrasePrompt interface to use for PIN prompting
# if the module/token provides a secondary authentication mechanism (e.g. a PIN pad) the login manager will
# use it regardless of this setting, if the USE_PROTECTED_AUTHENTICATION_PATH property is set to true.
# these implementations come with the default login manager:
# iaik.apps.util.passphrase.PassphraseDialog (a JDialog of swing)
# iaik.apps.util.passphrase.PassphraseFrameDialog (a JFrame of swing)
# iaik.apps.util.passphrase.PassphraseHolder (via a char[] array from the application)
# iaik.apps.util.passphrase.PassphraseConsoleDialog (via the console - standard in and out)
# default: iaik.apps.util.passphrase.PassphraseDialog
DEFAULT_PROMPT_DIALOG = iaik.apps.util.passphrase.PassphraseDialog
# DEFAULT_PROMPT_DIALOG = iaik.apps.util.passphrase.PassphraseFrameDialog
# DEFAULT_PROMPT_DIALOG = iaik.apps.util.passphrase.PassphraseConsoleDialog

# the string to prepend to the prompt message. 
# default: "Please enter User-PIN for this token"
DEFAULT_PROMPT_MESSAGE_PREFIX = Please enter User-PIN for this token

# use $(TRIALS_LEFT) keyword to insert the number of trials that are left. 
# default: "Wrong PIN! You have $(TRIALS_LEFT) trials left."
WRONG_PIN_WARNING = Wrong PIN! You have $(TRIALS_LEFT) trials left.

# This is the number of retries that are left to enter the right PIN. 
# It is required to configure this, because PKCS#11 does not provide this information. 
# PKCS#11 just provides information, if there is just one trial left. 
# default: 3
NUMBER_OF_USER_LOGIN_RETRIES = 3

# message that warns the user that the next PIN entry will be the last try.
# default: "Warning! The token reported that this will be the final try before the PIN gets blocked."
PIN_FINAL_TRY_WARNING = Warning! The token reported that this will be the final try before the PIN gets blocked.

# the implementation of the iaik.apps.util.passphrase.NewPassphrasePrompt interface to use for changing the PIN.
# if the module/token provides a secondary authentication mechanism (e.g. a PIN pad) the login manager will
# use it regardless of this setting, if the USE_PROTECTED_AUTHENTICATION_PATH property is set to true.
# these implementations come with the default login manager:
# iaik.apps.util.passphrase.NewPassphraseDialog (a JDialog of swing)
# iaik.apps.util.passphrase.NewPassphraseFrameDialog (a JFrame of swing)
# iaik.apps.util.passphrase.NewPassphraseHolder (via a char[] array from the application)
# iaik.apps.util.passphrase.NewPassphraseConsoleDialog (via the console - standard in and out)
# default: iaik.apps.util.passphrase.NewPassphraseDialog
DEFAULT_CHANGE_DIALOG = iaik.apps.util.passphrase.NewPassphraseDialog
# DEFAULT_CHANGE_DIALOG = iaik.apps.util.passphrase.NewPassphraseFrameDialog
# DEFAULT_CHANGE_DIALOG = iaik.apps.util.passphrase.NewPassphraseConsoleDialog

# the string to prepend to the prompt message. 
# default: "Please enter new User-PIN for this token"
DEFAULT_NEW_PROMPT_MESSAGE_PREFIX = Please enter new User-PIN for this token

# the warning message to display, if the entered new PIN was invalid. 
# default: "The entered new PIN is invalid."
INVALID_NEW_PIN_WARNING = The entered new PIN is invalid.

# the warning message to display, if the entered new PIN has an invlaid length. 
# default: "The length of the new PIN is invalid."
NEW_PIN_LENGTH_WARNING = The length of the new PIN is invalid.

# specifies if the login manager shall use the protected authentication path for
# prompting the user PIN, if such path is available.
# a protected authentication path is a PIN pad on the reader or a 
# fingerprint reader for instance.
# default: true
# USE_PROTECTED_AUTHENTICATION_PATH = false